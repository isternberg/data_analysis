Explorative Datenanalyse
Quelle:
http://www.molar.unibe.ch/help/statistics/spss/15_Explorative_Datenanalyse.pdf

## Datenbereinigung

Eigenschaften die uns nicht weiterhelfen
- description
- Address
Diese sind zu präziese um aussagekräftig zu sein


## Datenaufbereitung

Zeitangabe in Jahr und Uhrzeit parsen/aufsplitten
um später eine Auswertung der Straftatenverteilung aufs Jahr zu erhalten und eine Tageszeit abhängige relation aufzuzeigen.

## Wochentag
Der Wochentag ist nicht entscheidend bei dem Auftreten einer spezifischen Kriminalitäts-Kategorien.
Das bedeutet, täglich tritt die selbe Art von Kriminalität in einer ähnlichen Häufigkeit auf.
Mit einer Ausnahme, das Auftreten der Prostitutionsfälle unterscheiden sich stark, je nach Wochentag.

Die stärke des Rauschens ermitteln wir mit der Standart-Deviation.
Hierfür holen wir uns eine Kriminalitäts-Kategorie heraus und Listen das Auftreten je Tag an. 

Bild(print Row)


Dieser Zeilenvektor wird nun in einen Spaltenvektor Transponiert und die Pandas Funktion describe() ausgeführt.

Row = kriminalitäts-Kategorie

Row.T.decribe()

Wir erhalten dadurch eine statistische Auswertung der Daten. Hierbei fällt die Stärke des Rauschens zwischen den einzelnen Wochentagen auf (std).

Bild(1, print describe())

Dieser Wert dient uns nun dazu, alle Kriminalitäten aufzulisten, bei denen es bei der Häufigkeit des Auftretens einen Unterschied macht, an welchem Tag diese verübt wird.


# Bezirk

Frage: In welchen Bezirken finden welche Straftaten am Häufigsten/Seltensten statt.

Auf dem Weg zu dieser Aussage, listen wir das generelle Auftreten von Straftaten pro Bezirk auf.

frequency = df['Category'].groupby(df.['PdDistrict'])
freq_frame = frequency.count().to_frame()
freq.columns = ["Sum_of_crimes"]

Bild(2, Sum of crimes for each district)

Im weiteren erweitern wir den DataFrame der frequency um den min und max Wert des jeweiligen Bezirks. Also die Straftat mit dem niedrigsten/höstem Auftreten.
(Summe, min, max, min_%, max_%) for each district


